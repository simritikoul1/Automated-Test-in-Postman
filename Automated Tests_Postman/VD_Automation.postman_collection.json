{
	"info": {
		"_postman_id": "98f75854-0ed5-4f94-b187-43724c4de31c",
		"name": "VD_Automation",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "12468790"
	},
	"item": [
		{
			"name": "Token",
			"item": [
				{
					"name": "TokenRequest",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://linuxfoundation-dev.auth0.com/oauth/token",
							"protocol": "https",
							"host": [
								"linuxfoundation-dev",
								"auth0",
								"com"
							],
							"path": [
								"oauth",
								"token"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Security",
			"item": [
				{
					"name": "foundation_list",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 2000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
									"});\r",
									"\r",
									"const schema = {\r",
									"\r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"foundations\": {\r",
									"      \"type\": \"array\",\r",
									"      \"items\": [\r",
									"        {\r",
									"          \"type\": \"object\",\r",
									"          \"properties\": {\r",
									"            \"contributors\": {\r",
									"              \"type\": \"array\",\r",
									"              \"items\": [\r",
									"                {\r",
									"                  \"type\": \"object\",\r",
									"                  \"properties\": {\r",
									"                    \"contributor-email\": {\r",
									"                      \"type\": \"string\"\r",
									"                    },\r",
									"                    \"contributor-id\": {\r",
									"                      \"type\": \"string\"\r",
									"                    },\r",
									"                    \"contributor-name\": {\r",
									"                      \"type\": \"string\"\r",
									"                    },\r",
									"                    \"lf-id\": {\r",
									"                      \"type\": \"string\"\r",
									"                    },\r",
									"                    \"user-id\": {\r",
									"                      \"type\": \"string\"\r",
									"                    },\r",
									"                    \"user-type\": {\r",
									"                      \"type\": \"string\"\r",
									"                    }\r",
									"                  },\r",
									"                  \"required\": [\r",
									"                    \"contributor-email\",\r",
									"                    \"contributor-id\",\r",
									"                    \"contributor-name\",\r",
									"                    \"lf-id\",\r",
									"                    \"user-id\",\r",
									"                    \"user-type\"\r",
									"                  ]\r",
									"                }\r",
									"              ]\r",
									"            },\r",
									"            \"foundation-cll-project-id\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"foundation-desc\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"foundation-id\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"foundation-logo-url\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"foundation-name\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"is-foundation\": {\r",
									"              \"type\": \"boolean\"\r",
									"            },\r",
									"            \"project-id\": {\r",
									"              \"type\": \"string\"\r",
									"            }\r",
									"          },\r",
									"          \"required\": [\r",
									"            \"contributors\",\r",
									"            \"foundation-cll-project-id\",\r",
									"            \"foundation-desc\",\r",
									"            \"foundation-id\",\r",
									"            \"foundation-logo-url\",\r",
									"            \"foundation-name\",\r",
									"            \"is-foundation\",\r",
									"            \"project-id\"\r",
									"          ]\r",
									"        }\r",
									"      ]\r",
									"    },\r",
									"    \"pagination\": {\r",
									"      \"type\": \"object\",\r",
									"      \"properties\": {\r",
									"        \"limit\": {\r",
									"          \"type\": \"integer\"\r",
									"        },\r",
									"        \"offset\": {\r",
									"          \"type\": \"integer\"\r",
									"        },\r",
									"        \"sort-by\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"sort-order\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"total-records\": {\r",
									"          \"type\": \"integer\"\r",
									"        }\r",
									"      },\r",
									"      \"required\": [\r",
									"        \"limit\",\r",
									"        \"offset\",\r",
									"        \"sort-by\",\r",
									"        \"sort-order\",\r",
									"        \"total-records\"\r",
									"      ]\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"foundations\",\r",
									"    \"pagination\"\r",
									"  ]\r",
									"}\r",
									"\r",
									"pm.test(\"Validate schema\", ()=>\r",
									"{\r",
									"    pm.response.to.have.jsonSchema(schema);\r",
									"})\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/foundation/listing",
							"host": [
								"{{url}}"
							],
							"path": [
								"foundation",
								"listing"
							]
						}
					},
					"response": []
				},
				{
					"name": "foundation_Vulnerability_Detected",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 2000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
									"});\r",
									"\r",
									"const schema = {\r",
									"\r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"dependency-count\": {\r",
									"      \"type\": \"integer\"\r",
									"    },\r",
									"    \"foundation-cll-project-id\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"foundation-desc\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"foundation-id\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"foundation-logo-url\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"foundation-name\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"high-fixed-issues\": {\r",
									"      \"type\": \"integer\"\r",
									"    },\r",
									"    \"high-open-fixable-issues\": {\r",
									"      \"type\": \"integer\"\r",
									"    },\r",
									"    \"high-open-issues\": {\r",
									"      \"type\": \"integer\"\r",
									"    },\r",
									"    \"language-count\": {\r",
									"      \"type\": \"integer\"\r",
									"    },\r",
									"    \"last-scanned-date\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"license-count\": {\r",
									"      \"type\": \"integer\"\r",
									"    },\r",
									"    \"low-fixed-issues\": {\r",
									"      \"type\": \"integer\"\r",
									"    },\r",
									"    \"low-open-fixable-issues\": {\r",
									"      \"type\": \"integer\"\r",
									"    },\r",
									"    \"low-open-issues\": {\r",
									"      \"type\": \"integer\"\r",
									"    },\r",
									"    \"medium-fixed-issues\": {\r",
									"      \"type\": \"integer\"\r",
									"    },\r",
									"    \"medium-open-fixable-issues\": {\r",
									"      \"type\": \"integer\"\r",
									"    },\r",
									"    \"medium-open-issues\": {\r",
									"      \"type\": \"integer\"\r",
									"    },\r",
									"    \"partially-scanned-project-count\": {\r",
									"      \"type\": \"integer\"\r",
									"    },\r",
									"    \"scanned-repository-count\": {\r",
									"      \"type\": \"integer\"\r",
									"    },\r",
									"    \"successfully-scanned-project-count\": {\r",
									"      \"type\": \"integer\"\r",
									"    },\r",
									"    \"total-disabled-repositories\": {\r",
									"      \"type\": \"integer\"\r",
									"    },\r",
									"    \"total-fixed-issues\": {\r",
									"      \"type\": \"integer\"\r",
									"    },\r",
									"    \"total-issues\": {\r",
									"      \"type\": \"integer\"\r",
									"    },\r",
									"    \"total-open-fixable-issues\": {\r",
									"      \"type\": \"integer\"\r",
									"    },\r",
									"    \"total-open-issues\": {\r",
									"      \"type\": \"integer\"\r",
									"    },\r",
									"    \"total-repositories\": {\r",
									"      \"type\": \"integer\"\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"dependency-count\",\r",
									"    \"foundation-cll-project-id\",\r",
									"    \"foundation-desc\",\r",
									"    \"foundation-id\",\r",
									"    \"foundation-logo-url\",\r",
									"    \"foundation-name\",\r",
									"    \"high-fixed-issues\",\r",
									"    \"high-open-fixable-issues\",\r",
									"    \"high-open-issues\",\r",
									"    \"language-count\",\r",
									"    \"last-scanned-date\",\r",
									"    \"license-count\",\r",
									"    \"low-fixed-issues\",\r",
									"    \"low-open-fixable-issues\",\r",
									"    \"low-open-issues\",\r",
									"    \"medium-fixed-issues\",\r",
									"    \"medium-open-fixable-issues\",\r",
									"    \"medium-open-issues\",\r",
									"    \"partially-scanned-project-count\",\r",
									"    \"scanned-repository-count\",\r",
									"    \"successfully-scanned-project-count\",\r",
									"    \"total-disabled-repositories\",\r",
									"    \"total-fixed-issues\",\r",
									"    \"total-issues\",\r",
									"    \"total-open-fixable-issues\",\r",
									"    \"total-open-issues\",\r",
									"    \"total-repositories\"\r",
									"  ]\r",
									"}\r",
									"\r",
									"pm.test(\"Validate schema\", ()=>\r",
									"{\r",
									"    pm.response.to.have.jsonSchema(schema);\r",
									"})\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/foundation/a0941000002wBz9AAE/statistics",
							"host": [
								"{{url}}"
							],
							"path": [
								"foundation",
								"a0941000002wBz9AAE",
								"statistics"
							]
						}
					},
					"response": []
				},
				{
					"name": "project_list",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 2000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
									"});\r",
									"\r",
									"const schema = {\r",
									"  \"type\": \"array\",\r",
									"  \"items\": [\r",
									"    {\r",
									"      \"type\": \"object\",\r",
									"      \"properties\": {\r",
									"        \"foundation-id\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"foundation-name\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"project-id\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"project-name\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"project-type\": {\r",
									"          \"type\": \"string\"\r",
									"        }\r",
									"      },\r",
									"      \"required\": [\r",
									"        \"foundation-id\",\r",
									"        \"foundation-name\",\r",
									"        \"project-id\",\r",
									"        \"project-name\",\r",
									"        \"project-type\"\r",
									"      ]\r",
									"    }\r",
									"  ]\r",
									"}\r",
									"\r",
									"pm.test(\"Validate schema\", ()=>\r",
									"{\r",
									"    pm.response.to.have.jsonSchema(schema);\r",
									"})\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/projects/search",
							"host": [
								"{{url}}"
							],
							"path": [
								"projects",
								"search"
							]
						}
					},
					"response": []
				},
				{
					"name": "health_check",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 2000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
									"});\r",
									"\r",
									"const schema = {\r",
									"  \r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"Branch\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"BuildTimeStamp\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"Githash\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"Healths\": {\r",
									"      \"type\": \"array\",\r",
									"      \"items\": [\r",
									"        {\r",
									"          \"type\": \"object\",\r",
									"          \"properties\": {\r",
									"            \"Duration\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \r",
									"            \"Healthy\": {\r",
									"              \"type\": \"boolean\"\r",
									"            },\r",
									"            \r",
									"            \"Name\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"TimeStamp\": {\r",
									"              \"type\": \"string\"\r",
									"            }\r",
									"          },\r",
									"          \"required\": [\r",
									"            \"Duration\",\r",
									"            \"Healthy\",\r",
									"            \"Name\",\r",
									"            \"TimeStamp\"\r",
									"          ]\r",
									"        },\r",
									"        {\r",
									"          \"type\": \"object\",\r",
									"          \"properties\": {\r",
									"            \"Duration\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"    \r",
									"            \"Healthy\": {\r",
									"              \"type\": \"boolean\"\r",
									"            },\r",
									"            \"Message\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"Name\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"TimeStamp\": {\r",
									"              \"type\": \"string\"\r",
									"            }\r",
									"          },\r",
									"          \"required\": [\r",
									"            \"Duration\",\r",
									"            \"Healthy\",\r",
									"            \"Message\",\r",
									"            \"Name\",\r",
									"            \"TimeStamp\"\r",
									"          ]\r",
									"        }\r",
									"      ]\r",
									"    },\r",
									"    \"Status\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"TimeStamp\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"Version\": {\r",
									"      \"type\": \"string\"\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"Branch\",\r",
									"    \"BuildTimeStamp\",\r",
									"    \"Githash\",\r",
									"    \"Healths\",\r",
									"    \"Status\",\r",
									"    \"TimeStamp\",\r",
									"    \"Version\"\r",
									"  ]\r",
									"}\r",
									"\r",
									"\r",
									"pm.test(\"Validate schema\", ()=>\r",
									"{\r",
									"    pm.response.to.have.jsonSchema(schema);\r",
									"})\r",
									"\r",
									"pm.test(\"Check that we have all declared fields\", function () {\r",
									"    const jsonData = pm.response.json();\r",
									"    pm.expect(jsonData).to.have.property(\"Branch\");\r",
									"    pm.expect(jsonData).to.have.property(\"BuildTimeStamp\");\r",
									"    pm.expect(jsonData).to.have.property(\"Githash\");\r",
									"    pm.expect(jsonData).to.have.property(\"Healths\");\r",
									"    pm.expect(jsonData).to.have.property(\"Status\");\r",
									"    pm.expect(jsonData).to.have.property(\"TimeStamp\");\r",
									"    pm.expect(jsonData).to.have.property(\"Version\");\r",
									"});\r",
									"\r",
									"pm.test(\"Check if value isn't empty\", function () {\r",
									"    const jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.Branch).not.equal('');\r",
									"    pm.expect(jsonData.BuildTimeStamp).not.equal('');\r",
									"    pm.expect(jsonData.Githash).not.equal('');\r",
									"    pm.expect(jsonData.Status).not.equal('');\r",
									"    pm.expect(jsonData.TimeStamp).not.equal('');\r",
									"    pm.expect(jsonData.Version).not.equal('');\r",
									"});\r",
									"\r",
									"pm.test(\"Status is Healthy\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.Status).to.eq('healthy');\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/health",
							"host": [
								"{{url}}"
							],
							"path": [
								"health"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET_Metrics",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"console.log(\"Hello Security\");\r",
									"\r",
									"let urlVar = pm.variables.get(\"url\");\r",
									"console.log(\"Value of url variable is :  \"+urlVar);\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that response time is less than 2000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
									"});\r",
									"\r",
									"const schema = {\r",
									"  \r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"project\": {\r",
									"      \"type\": \"object\",\r",
									"      \"properties\": {\r",
									"        \"pending-projects\": {\r",
									"          \"type\": \"integer\"\r",
									"        },\r",
									"        \"published-projects\": {\r",
									"          \"type\": \"integer\"\r",
									"        },\r",
									"        \"rejected-projects\": {\r",
									"          \"type\": \"integer\"\r",
									"        },\r",
									"        \"scanned-projects\": {\r",
									"          \"type\": \"integer\"\r",
									"        },\r",
									"        \"total-projects\": {\r",
									"          \"type\": \"integer\"\r",
									"        },\r",
									"        \"unpublished-projects\": {\r",
									"          \"type\": \"integer\"\r",
									"        }\r",
									"      },\r",
									"      \"required\": [\r",
									"        \"pending-projects\",\r",
									"        \"published-projects\",\r",
									"        \"rejected-projects\",\r",
									"        \"scanned-projects\",\r",
									"        \"total-projects\",\r",
									"        \"unpublished-projects\"\r",
									"      ]\r",
									"    },\r",
									"    \"repository\": {\r",
									"      \"type\": \"object\",\r",
									"      \"properties\": {\r",
									"        \"disabled-repositories\": {\r",
									"          \"type\": \"integer\"\r",
									"        },\r",
									"        \"enabled-repositories\": {\r",
									"          \"type\": \"integer\"\r",
									"        },\r",
									"        \"scanned-repositories\": {\r",
									"          \"type\": \"integer\"\r",
									"        },\r",
									"        \"total-repositories\": {\r",
									"          \"type\": \"integer\"\r",
									"        }\r",
									"      },\r",
									"      \"required\": [\r",
									"        \"disabled-repositories\",\r",
									"        \"enabled-repositories\",\r",
									"        \"scanned-repositories\",\r",
									"        \"total-repositories\"\r",
									"      ]\r",
									"    },\r",
									"    \"vulnerability\": {\r",
									"      \"type\": \"object\",\r",
									"      \"properties\": {\r",
									"        \"high\": {\r",
									"          \"type\": \"object\",\r",
									"          \"properties\": {\r",
									"            \"all\": {\r",
									"              \"type\": \"integer\"\r",
									"            },\r",
									"            \"fixed\": {\r",
									"              \"type\": \"integer\"\r",
									"            },\r",
									"            \"open\": {\r",
									"              \"type\": \"integer\"\r",
									"            },\r",
									"          },\r",
									"          \"required\": [\r",
									"            \"all\",\r",
									"            \"fixed\",\r",
									"            \"open\",\r",
									"          ]\r",
									"        },\r",
									"        \"low\": {\r",
									"          \"type\": \"object\",\r",
									"          \"properties\": {\r",
									"            \"all\": {\r",
									"              \"type\": \"integer\"\r",
									"            },\r",
									"            \"fixed\": {\r",
									"              \"type\": \"integer\"\r",
									"            },\r",
									"            \"open\": {\r",
									"              \"type\": \"integer\"\r",
									"            },\r",
									"          },\r",
									"          \"required\": [\r",
									"            \"all\",\r",
									"            \"fixed\",\r",
									"            \"open\",\r",
									"          ]\r",
									"        },\r",
									"        \"medium\": {\r",
									"          \"type\": \"object\",\r",
									"          \"properties\": {\r",
									"            \"all\": {\r",
									"              \"type\": \"integer\"\r",
									"            },\r",
									"            \"fixed\": {\r",
									"              \"type\": \"integer\"\r",
									"            },\r",
									"            \"open\": {\r",
									"              \"type\": \"integer\"\r",
									"            },\r",
									"          },\r",
									"          \"required\": [\r",
									"            \"all\",\r",
									"            \"fixed\",\r",
									"            \"open\",\r",
									"          ]\r",
									"        },\r",
									"        \"total\": {\r",
									"          \"type\": \"object\",\r",
									"          \"properties\": {\r",
									"            \"all\": {\r",
									"              \"type\": \"integer\"\r",
									"            },\r",
									"            \"fixed\": {\r",
									"              \"type\": \"integer\"\r",
									"            },\r",
									"            \"open\": {\r",
									"              \"type\": \"integer\"\r",
									"            },\r",
									"          },\r",
									"          \"required\": [\r",
									"            \"all\",\r",
									"            \"fixed\",\r",
									"            \"open\",\r",
									"          ]\r",
									"        }\r",
									"      },\r",
									"      \"required\": [\r",
									"        \"high\",\r",
									"        \"low\",\r",
									"        \"medium\",\r",
									"        \"total\"\r",
									"      ]\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"project\",\r",
									"    \"repository\",\r",
									"    \"vulnerability\"\r",
									"  ],\r",
									"  \"additionalproperties\" : false\r",
									"}\r",
									"\r",
									"pm.test(\"Validate schema\", ()=>\r",
									"{\r",
									"    pm.response.to.have.jsonSchema(schema);\r",
									"})\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/metrics-report",
							"host": [
								"{{url}}"
							],
							"path": [
								"metrics-report"
							]
						}
					},
					"response": []
				},
				{
					"name": "vulnerability_dependency_tree",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 2000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
									"});\r",
									"\r",
									"const schema = {\r",
									"  \r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"pagination\": {\r",
									"      \"type\": \"object\",\r",
									"      \"properties\": {\r",
									"        \"limit\": {\r",
									"          \"type\": \"integer\"\r",
									"        },\r",
									"        \"offset\": {\r",
									"          \"type\": \"integer\"\r",
									"        },\r",
									"        \"sort-by\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"sort-order\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"total-records\": {\r",
									"          \"type\": \"integer\"\r",
									"        }\r",
									"      },\r",
									"      \"required\": [\r",
									"        \"limit\",\r",
									"        \"offset\",\r",
									"        \"sort-by\",\r",
									"        \"sort-order\",\r",
									"        \"total-records\"\r",
									"      ]\r",
									"    },\r",
									"    \"repository-dependencies\": {\r",
									"      \"type\": \"array\",\r",
									"      \"items\": [\r",
									"        {\r",
									"          \"type\": \"object\",\r",
									"          \"properties\": {\r",
									"            \"dependencies\": {\r",
									"              \"type\": \"array\",\r",
									"              \"items\": [\r",
									"                {\r",
									"                  \"type\": \"object\",\r",
									"                  \"properties\": {\r",
									"                    \"dependency-id\": {\r",
									"                      \"type\": \"string\"\r",
									"                    },\r",
									"                    \"dependency-name\": {\r",
									"                      \"type\": \"string\"\r",
									"                    },\r",
									"                    \"dependency-version\": {\r",
									"                      \"type\": \"string\"\r",
									"                    },\r",
									"                    \"has-child-dependency\": {\r",
									"                      \"type\": \"boolean\"\r",
									"                    },\r",
									"                    \"has-high-child-issues\": {\r",
									"                      \"type\": \"boolean\"\r",
									"                    },\r",
									"                    \"has-low-child-issues\": {\r",
									"                      \"type\": \"boolean\"\r",
									"                    },\r",
									"                    \"has-medium-child-issues\": {\r",
									"                      \"type\": \"boolean\"\r",
									"                    },\r",
									"                    \"issue-high-count\": {\r",
									"                      \"type\": \"integer\"\r",
									"                    },\r",
									"                    \"issue-low-count\": {\r",
									"                      \"type\": \"integer\"\r",
									"                    },\r",
									"                    \"issue-medium-count\": {\r",
									"                      \"type\": \"integer\"\r",
									"                    },\r",
									"                    \"licenses\": {\r",
									"                      \"type\": \"array\",\r",
									"                      \"items\": [\r",
									"                        {\r",
									"                          \"type\": \"string\"\r",
									"                        }\r",
									"                      ]\r",
									"                    },\r",
									"                  },\r",
									"                  \"required\": [\r",
									"                    \"dependency-id\",\r",
									"                    \"dependency-name\",\r",
									"                    \"dependency-version\",\r",
									"                    \"has-child-dependency\",\r",
									"                    \"has-high-child-issues\",\r",
									"                    \"has-low-child-issues\",\r",
									"                    \"has-medium-child-issues\",\r",
									"                    \"issue-high-count\",\r",
									"                    \"issue-low-count\",\r",
									"                    \"issue-medium-count\",\r",
									"                    \"licenses\"\r",
									"                  ]\r",
									"                }\r",
									"              ]\r",
									"            },\r",
									"            \"issue-high-count\": {\r",
									"              \"type\": \"integer\"\r",
									"            },\r",
									"            \"issue-low-count\": {\r",
									"              \"type\": \"integer\"\r",
									"            },\r",
									"            \"issue-medium-count\": {\r",
									"              \"type\": \"integer\"\r",
									"            },\r",
									"            \"repository-id\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"repository-name\": {\r",
									"              \"type\": \"string\"\r",
									"            }\r",
									"          },\r",
									"          \"required\": [\r",
									"            \"dependencies\",\r",
									"            \"issue-high-count\",\r",
									"            \"issue-low-count\",\r",
									"            \"issue-medium-count\",\r",
									"            \"repository-id\",\r",
									"            \"repository-name\"\r",
									"          ]\r",
									"        }\r",
									"      ]\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"pagination\",\r",
									"    \"repository-dependencies\"\r",
									"  ]\r",
									"}\r",
									"\r",
									"pm.test(\"Validate schema\", ()=>\r",
									"{\r",
									"    pm.response.to.have.jsonSchema(schema);\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/project/3b9fc3fc-5ce7-4156-8712-ff5b288858e3/dependency-tree",
							"host": [
								"{{url}}"
							],
							"path": [
								"project",
								"3b9fc3fc-5ce7-4156-8712-ff5b288858e3",
								"dependency-tree"
							]
						}
					},
					"response": []
				},
				{
					"name": "vulnerability_issues",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 2000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
									"});\r",
									"\r",
									"const schema = {\r",
									"  \r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"issues\": {\r",
									"      \"type\": \"array\",\r",
									"      \"items\": [\r",
									"        {\r",
									"          \"type\": \"object\",\r",
									"          \"properties\": {\r",
									"            \"high-fixed-issues\": {\r",
									"              \"type\": \"integer\"\r",
									"            },\r",
									"            \"high-open-issues\": {\r",
									"              \"type\": \"integer\"\r",
									"            },\r",
									"            \"low-fixed-issues\": {\r",
									"              \"type\": \"integer\"\r",
									"            },\r",
									"            \"low-open-issues\": {\r",
									"              \"type\": \"integer\"\r",
									"            },\r",
									"            \"medium-fixed-issues\": {\r",
									"              \"type\": \"integer\"\r",
									"            },\r",
									"            \"medium-open-issues\": {\r",
									"              \"type\": \"integer\"\r",
									"            },\r",
									"            \"repository-id\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"repository-name\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"repository-url\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"total-fixable-issues\": {\r",
									"              \"type\": \"integer\"\r",
									"            },\r",
									"            \"total-fixed-issues\": {\r",
									"              \"type\": \"integer\"\r",
									"            },\r",
									"            \"total-open-issues\": {\r",
									"              \"type\": \"integer\"\r",
									"            }\r",
									"          },\r",
									"          \"required\": [\r",
									"            \"high-fixed-issues\",\r",
									"            \"high-open-issues\",\r",
									"            \"low-fixed-issues\",\r",
									"            \"low-open-issues\",\r",
									"            \"medium-fixed-issues\",\r",
									"            \"medium-open-issues\",\r",
									"            \"repository-id\",\r",
									"            \"repository-name\",\r",
									"            \"repository-url\",\r",
									"            \"total-fixable-issues\",\r",
									"            \"total-fixed-issues\",\r",
									"            \"total-open-issues\"\r",
									"          ]\r",
									"        }\r",
									"      ]\r",
									"    },\r",
									"    \"pagination\": {\r",
									"      \"type\": \"object\",\r",
									"      \"properties\": {\r",
									"        \"limit\": {\r",
									"          \"type\": \"integer\"\r",
									"        },\r",
									"        \"offset\": {\r",
									"          \"type\": \"integer\"\r",
									"        },\r",
									"        \"sort-by\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"sort-order\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"total-records\": {\r",
									"          \"type\": \"integer\"\r",
									"        }\r",
									"      },\r",
									"      \"required\": [\r",
									"        \"limit\",\r",
									"        \"offset\",\r",
									"        \"sort-by\",\r",
									"        \"sort-order\",\r",
									"        \"total-records\"\r",
									"      ]\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"issues\",\r",
									"    \"pagination\"\r",
									"  ]\r",
									"}\r",
									"\r",
									"pm.test(\"Validate schema\", ()=>\r",
									"{\r",
									"    pm.response.to.have.jsonSchema(schema);\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/project/3b9fc3fc-5ce7-4156-8712-ff5b288858e3/issues",
							"host": [
								"{{url}}"
							],
							"path": [
								"project",
								"3b9fc3fc-5ce7-4156-8712-ff5b288858e3",
								"issues"
							]
						}
					},
					"response": []
				},
				{
					"name": "dependencyDetail",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 2000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
									"});\r",
									"\r",
									"const schema = {\r",
									"  \"type\": \"array\",\r",
									"  \"items\": [\r",
									"    {\r",
									"      \"type\": \"object\",\r",
									"      \"properties\": {\r",
									"        \"dependency-id\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"dependency-name\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"dependency-version\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"has-child-dependency\": {\r",
									"          \"type\": \"boolean\"\r",
									"        },\r",
									"        \"has-high-child-issues\": {\r",
									"          \"type\": \"boolean\"\r",
									"        },\r",
									"        \"has-low-child-issues\": {\r",
									"          \"type\": \"boolean\"\r",
									"        },\r",
									"        \"has-medium-child-issues\": {\r",
									"          \"type\": \"boolean\"\r",
									"        },\r",
									"        \"issue-high-count\": {\r",
									"          \"type\": \"integer\"\r",
									"        },\r",
									"        \"issue-low-count\": {\r",
									"          \"type\": \"integer\"\r",
									"        },\r",
									"        \"issue-medium-count\": {\r",
									"          \"type\": \"integer\"\r",
									"        },\r",
									"        \"licenses\": {\r",
									"          \"type\": \"array\",\r",
									"          \"items\": [\r",
									"            {\r",
									"              \"type\": \"string\"\r",
									"            }\r",
									"          ]\r",
									"        },\r",
									"      },\r",
									"      \"required\": [\r",
									"        \"dependency-id\",\r",
									"        \"dependency-name\",\r",
									"        \"dependency-version\",\r",
									"        \"has-child-dependency\",\r",
									"        \"has-high-child-issues\",\r",
									"        \"has-low-child-issues\",\r",
									"        \"has-medium-child-issues\",\r",
									"        \"issue-high-count\",\r",
									"        \"issue-low-count\",\r",
									"        \"issue-medium-count\",\r",
									"        \"licenses\"\r",
									"      ]\r",
									"    }\r",
									"  ]\r",
									"}\r",
									"\r",
									"pm.test(\"Validate schema\", ()=>\r",
									"{\r",
									"    pm.response.to.have.jsonSchema(schema);\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/project/9ceced09-63e0-4eb1-9685-cab2997f839b/repository/540aadb7-29ca-4d4e-9dc7-38552daa304a/dependency/504e2c7e-983a-49bb-9265-3fc23e72199f/child-dependencies",
							"host": [
								"{{url}}"
							],
							"path": [
								"project",
								"9ceced09-63e0-4eb1-9685-cab2997f839b",
								"repository",
								"540aadb7-29ca-4d4e-9dc7-38552daa304a",
								"dependency",
								"504e2c7e-983a-49bb-9265-3fc23e72199f",
								"child-dependencies"
							]
						}
					},
					"response": []
				},
				{
					"name": "repo_vuln_Issue",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 2000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
									"});\r",
									"\r",
									"const schema = {\r",
									"\r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"issues\": {\r",
									"      \"type\": \"array\",\r",
									"      \"items\": [\r",
									"        {\r",
									"          \"type\": \"object\",\r",
									"          \"properties\": {\r",
									"            \"applicable\": {\r",
									"              \"type\": \"boolean\"\r",
									"            },\r",
									"            \"created-at\": {\r",
									"              \"type\": \"integer\"\r",
									"            },\r",
									"            \"credit\": {\r",
									"              \"type\": \"array\",\r",
									"              \"items\": [\r",
									"                {\r",
									"                  \"type\": \"string\"\r",
									"                }\r",
									"              ]\r",
									"            },\r",
									"            \"cve-identifiers\": {\r",
									"              \"type\": \"array\",\r",
									"              \"items\": [\r",
									"                {\r",
									"                  \"type\": \"string\"\r",
									"                }\r",
									"              ]\r",
									"            },\r",
									"            \"cwe-identifiers\": {\r",
									"              \"type\": \"array\",\r",
									"              \"items\": [\r",
									"                {\r",
									"                  \"type\": \"string\"\r",
									"                }\r",
									"              ]\r",
									"            },\r",
									"        \r",
									"            \"disclosure_time\": {\r",
									"              \"type\": \"integer\"\r",
									"            },\r",
									"            \"fixed_in\": {\r",
									"              \"type\": \"array\",\r",
									"              \"items\": [\r",
									"                {\r",
									"                  \"type\": \"string\"\r",
									"                }\r",
									"              ]\r",
									"            },\r",
									"            \r",
									"            \"package-manager\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"publication_time\": {\r",
									"              \"type\": \"integer\"\r",
									"            },\r",
									"            \r",
									"            \"repository-folderpath-id\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"repository-id\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"severity\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"snyk-id\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"status\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"title\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"updated-at\": {\r",
									"              \"type\": \"integer\"\r",
									"            }\r",
									"          },\r",
									"          \"required\": [\r",
									"            \"applicable\",\r",
									"            \"created-at\",\r",
									"            \"credit\",\r",
									"            \"cve-identifiers\",\r",
									"            \"cwe-identifiers\",\r",
									"            \r",
									"            \"disclosure_time\",\r",
									"            \"fixed_in\",\r",
									"           \r",
									"            \"package-manager\",\r",
									"            \"publication_time\",\r",
									"            \r",
									"            \"repository-folderpath-id\",\r",
									"            \"repository-id\",\r",
									"            \"severity\",\r",
									"            \"snyk-id\",\r",
									"            \"status\",\r",
									"            \"title\",\r",
									"            \"updated-at\"\r",
									"          ]\r",
									"        }\r",
									"      ]\r",
									"    },\r",
									"    \"pagination\": {\r",
									"      \"type\": \"object\",\r",
									"      \"properties\": {\r",
									"        \"limit\": {\r",
									"          \"type\": \"integer\"\r",
									"        },\r",
									"        \"offset\": {\r",
									"          \"type\": \"integer\"\r",
									"        },\r",
									"        \"sort-by\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"sort-order\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"total-records\": {\r",
									"          \"type\": \"integer\"\r",
									"        }\r",
									"      },\r",
									"      \"required\": [\r",
									"        \"limit\",\r",
									"        \"offset\",\r",
									"        \"sort-by\",\r",
									"        \"sort-order\",\r",
									"        \"total-records\"\r",
									"      ]\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"issues\",\r",
									"    \"pagination\"\r",
									"  ]\r",
									"}\r",
									"\r",
									"pm.test(\"Validate schema\", ()=>\r",
									"{\r",
									"    pm.response.to.have.jsonSchema(schema);\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/project/48a3060e-3a04-4eaa-8abc-62c2e0292988/repository/a9492463-0003-485d-b984-a311947e70dc/issues",
							"host": [
								"{{url}}"
							],
							"path": [
								"project",
								"48a3060e-3a04-4eaa-8abc-62c2e0292988",
								"repository",
								"a9492463-0003-485d-b984-a311947e70dc",
								"issues"
							]
						}
					},
					"response": []
				},
				{
					"name": "licencse_list",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 2000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
									"});\r",
									"\r",
									"const schema = {\r",
									"  \r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"licenses-listing\": {\r",
									"      \"type\": \"array\",\r",
									"      \"items\": [\r",
									"        {\r",
									"          \"type\": \"string\"\r",
									"        }\r",
									"      ]\r",
									"    },\r",
									"    \"pagination\": {\r",
									"      \"type\": \"object\",\r",
									"      \"properties\": {\r",
									"        \"limit\": {\r",
									"          \"type\": \"integer\"\r",
									"        },\r",
									"        \"offset\": {\r",
									"          \"type\": \"integer\"\r",
									"        },\r",
									"        \"sort-by\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"sort-order\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"total-records\": {\r",
									"          \"type\": \"integer\"\r",
									"        }\r",
									"      },\r",
									"      \"required\": [\r",
									"        \"limit\",\r",
									"        \"offset\",\r",
									"        \"sort-by\",\r",
									"        \"sort-order\",\r",
									"        \"total-records\"\r",
									"      ]\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"licenses-listing\",\r",
									"    \"pagination\"\r",
									"  ]\r",
									"}\r",
									"\r",
									"pm.test(\"Validate schema\", ()=>\r",
									"{\r",
									"    pm.response.to.have.jsonSchema(schema);\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/project/3b9fc3fc-5ce7-4156-8712-ff5b288858e3/licenses-listing",
							"host": [
								"{{url}}"
							],
							"path": [
								"project",
								"3b9fc3fc-5ce7-4156-8712-ff5b288858e3",
								"licenses-listing"
							]
						}
					},
					"response": []
				},
				{
					"name": "packages-listing",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 2000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
									"});\r",
									"\r",
									"const schema = {\r",
									"  \r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"packages-listing\": {\r",
									"      \"type\": \"array\",\r",
									"      \"items\": [\r",
									"        {\r",
									"          \"type\": \"object\",\r",
									"          \"properties\": {\r",
									"            \"license-name\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"package-name\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"package-version\": {\r",
									"              \"type\": \"string\"\r",
									"            }\r",
									"          },\r",
									"          \"required\": [\r",
									"            \"license-name\",\r",
									"            \"package-name\",\r",
									"            \"package-version\"\r",
									"          ]\r",
									"        }\r",
									"      ]\r",
									"    },\r",
									"    \"pagination\": {\r",
									"      \"type\": \"object\",\r",
									"      \"properties\": {\r",
									"        \"limit\": {\r",
									"          \"type\": \"integer\"\r",
									"        },\r",
									"        \"offset\": {\r",
									"          \"type\": \"integer\"\r",
									"        },\r",
									"        \"sort-by\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"sort-order\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"total-records\": {\r",
									"          \"type\": \"integer\"\r",
									"        }\r",
									"      },\r",
									"      \"required\": [\r",
									"        \"limit\",\r",
									"        \"offset\",\r",
									"        \"sort-by\",\r",
									"        \"sort-order\",\r",
									"        \"total-records\"\r",
									"      ]\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"packages-listing\",\r",
									"    \"pagination\"\r",
									"  ]\r",
									"}\r",
									"\r",
									"pm.test(\"Validate schema\", ()=>\r",
									"{\r",
									"    pm.response.to.have.jsonSchema(schema);\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/project/3b9fc3fc-5ce7-4156-8712-ff5b288858e3/packages-listing",
							"host": [
								"{{url}}"
							],
							"path": [
								"project",
								"3b9fc3fc-5ce7-4156-8712-ff5b288858e3",
								"packages-listing"
							]
						}
					},
					"response": []
				},
				{
					"name": "release_overview",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 2000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
									"});\r",
									"\r",
									"const schema = {\r",
									"  \r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"pagination\": {\r",
									"      \"type\": \"object\",\r",
									"      \"properties\": {\r",
									"        \"limit\": {\r",
									"          \"type\": \"integer\"\r",
									"        },\r",
									"        \"offset\": {\r",
									"          \"type\": \"integer\"\r",
									"        },\r",
									"        \"sort-by\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"sort-order\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"total-records\": {\r",
									"          \"type\": \"integer\"\r",
									"        }\r",
									"      },\r",
									"      \"required\": [\r",
									"        \"limit\",\r",
									"        \"offset\",\r",
									"        \"sort-by\",\r",
									"        \"sort-order\",\r",
									"        \"total-records\"\r",
									"      ]\r",
									"    },\r",
									"    \"release\": {\r",
									"      \"type\": \"array\",\r",
									"      \"items\": [\r",
									"        {\r",
									"          \"type\": \"object\",\r",
									"          \"properties\": {\r",
									"            \"external-id\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"project-id\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"release-date\": {\r",
									"              \"type\": \"integer\"\r",
									"            },\r",
									"            \"release-tag\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"          },\r",
									"          \"required\": [\r",
									"            \"external-id\",\r",
									"            \"project-id\",\r",
									"            \"release-date\",\r",
									"            \"release-tag\",\r",
									"          ]\r",
									"        }\r",
									"      ]\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"pagination\",\r",
									"    \"release\"\r",
									"  ]\r",
									"}\r",
									"\r",
									"pm.test(\"Validate schema\", ()=>\r",
									"{\r",
									"    pm.response.to.have.jsonSchema(schema);\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/project/3b9fc3fc-5ce7-4156-8712-ff5b288858e3/release/overview",
							"host": [
								"{{url}}"
							],
							"path": [
								"project",
								"3b9fc3fc-5ce7-4156-8712-ff5b288858e3",
								"release",
								"overview"
							]
						}
					},
					"response": []
				},
				{
					"name": "repositories_API",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 2000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
									"});\r",
									"\r",
									"const schema = {\r",
									"  \r",
									"  \"type\": \"array\",\r",
									"  \"items\": [\r",
									"    {\r",
									"      \"type\": \"object\",\r",
									"      \"properties\": {\r",
									"        \"enable\": {\r",
									"          \"type\": \"boolean\"\r",
									"        },\r",
									"        \"repository-id\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"repository-name\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"total-languages\": {\r",
									"          \"type\": \"integer\"\r",
									"        },\r",
									"        \"total-releases\": {\r",
									"          \"type\": \"integer\"\r",
									"        }\r",
									"      },\r",
									"      \"required\": [\r",
									"        \"enable\",\r",
									"        \"repository-id\",\r",
									"        \"repository-name\",\r",
									"        \"total-languages\",\r",
									"        \"total-releases\"\r",
									"      ]\r",
									"    }\r",
									"  ]\r",
									"}\r",
									"\r",
									"pm.test(\"Validate schema\", ()=>\r",
									"{\r",
									"    pm.response.to.have.jsonSchema(schema);\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/project/3b9fc3fc-5ce7-4156-8712-ff5b288858e3/repositories",
							"host": [
								"{{url}}"
							],
							"path": [
								"project",
								"3b9fc3fc-5ce7-4156-8712-ff5b288858e3",
								"repositories"
							]
						}
					},
					"response": []
				},
				{
					"name": "repositories-listing",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 2000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
									"});\r",
									"\r",
									"const schema = {\r",
									"  \r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"pagination\": {\r",
									"      \"type\": \"object\",\r",
									"      \"properties\": {\r",
									"        \"limit\": {\r",
									"          \"type\": \"integer\"\r",
									"        },\r",
									"        \"offset\": {\r",
									"          \"type\": \"integer\"\r",
									"        },\r",
									"        \"sort-by\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"sort-order\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"total-records\": {\r",
									"          \"type\": \"integer\"\r",
									"        }\r",
									"      },\r",
									"      \"required\": [\r",
									"        \"limit\",\r",
									"        \"offset\",\r",
									"        \"sort-by\",\r",
									"        \"sort-order\",\r",
									"        \"total-records\"\r",
									"      ]\r",
									"    },\r",
									"    \"repositories-listing\": {\r",
									"      \"type\": \"array\",\r",
									"      \"items\": [\r",
									"        {\r",
									"          \"type\": \"object\",\r",
									"          \"properties\": {\r",
									"            \"repository-id\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"repository-name\": {\r",
									"              \"type\": \"string\"\r",
									"            }\r",
									"          },\r",
									"          \"required\": [\r",
									"            \"repository-id\",\r",
									"            \"repository-name\"\r",
									"          ]\r",
									"        }\r",
									"      ]\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"pagination\",\r",
									"    \"repositories-listing\"\r",
									"  ]\r",
									"}\r",
									"\r",
									"\r",
									"pm.test(\"Validate schema\", ()=>\r",
									"{\r",
									"    pm.response.to.have.jsonSchema(schema);\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.security.dev.platform.linuxfoundation.org/v1/project/3b9fc3fc-5ce7-4156-8712-ff5b288858e3/repositories-listing",
							"protocol": "https",
							"host": [
								"api",
								"security",
								"dev",
								"platform",
								"linuxfoundation",
								"org"
							],
							"path": [
								"v1",
								"project",
								"3b9fc3fc-5ce7-4156-8712-ff5b288858e3",
								"repositories-listing"
							]
						}
					},
					"response": []
				},
				{
					"name": "repositories_detail",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 2000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
									"});\r",
									"\r",
									"const schema = {\r",
									"  \r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"pagination\": {\r",
									"      \"type\": \"object\",\r",
									"      \"properties\": {\r",
									"        \"limit\": {\r",
									"          \"type\": \"integer\"\r",
									"        },\r",
									"        \"offset\": {\r",
									"          \"type\": \"integer\"\r",
									"        },\r",
									"        \"sort-by\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"sort-order\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"total-records\": {\r",
									"          \"type\": \"integer\"\r",
									"        }\r",
									"      },\r",
									"      \"required\": [\r",
									"        \"limit\",\r",
									"        \"offset\",\r",
									"        \"sort-by\",\r",
									"        \"sort-order\",\r",
									"        \"total-records\"\r",
									"      ]\r",
									"    },\r",
									"    \"project-repositories\": {\r",
									"      \"type\": \"array\",\r",
									"      \"items\": [\r",
									"        {\r",
									"          \"type\": \"object\",\r",
									"          \"properties\": {\r",
									"            \"dependency-count\": {\r",
									"              \"type\": \"integer\"\r",
									"            },\r",
									"            \"enable\": {\r",
									"              \"type\": \"boolean\"\r",
									"            },\r",
									"            \"github-connection-status\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"issue-count\": {\r",
									"              \"type\": \"integer\"\r",
									"            },\r",
									"            \"last-scanned-date\": {\r",
									"              \"type\": \"integer\"\r",
									"            },\r",
									"            \"last-scanned-status\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"repository-id\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"repository-name\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"repository-url\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"snyk-dev-dependency\": {\r",
									"              \"type\": \"boolean\"\r",
									"            }\r",
									"          },\r",
									"          \"required\": [\r",
									"            \"dependency-count\",\r",
									"            \"enable\",\r",
									"            \"github-connection-status\",\r",
									"            \"issue-count\",\r",
									"            \"last-scanned-date\",\r",
									"            \"last-scanned-status\",\r",
									"            \"repository-id\",\r",
									"            \"repository-name\",\r",
									"            \"repository-url\",\r",
									"            \"snyk-dev-dependency\"\r",
									"          ]\r",
									"        }\r",
									"      ]\r",
									"    },\r",
									"    \"project-repositories-statistics\": {\r",
									"      \"type\": \"object\",\r",
									"      \"properties\": {\r",
									"        \"connection-repositories\": {\r",
									"          \"type\": \"integer\"\r",
									"        },\r",
									"        \"no-connection-repositories\": {\r",
									"          \"type\": \"integer\"\r",
									"        },\r",
									"        \"total-repositories\": {\r",
									"          \"type\": \"integer\"\r",
									"        }\r",
									"      },\r",
									"      \"required\": [\r",
									"        \"connection-repositories\",\r",
									"        \"no-connection-repositories\",\r",
									"        \"total-repositories\"\r",
									"      ]\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"pagination\",\r",
									"    \"project-repositories\",\r",
									"    \"project-repositories-statistics\"\r",
									"  ]\r",
									"}\r",
									"\r",
									"\r",
									"pm.test(\"Validate schema\", ()=>\r",
									"{\r",
									"    pm.response.to.have.jsonSchema(schema);\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/project/3b9fc3fc-5ce7-4156-8712-ff5b288858e3/repositories-with-detail",
							"host": [
								"{{url}}"
							],
							"path": [
								"project",
								"3b9fc3fc-5ce7-4156-8712-ff5b288858e3",
								"repositories-with-detail"
							]
						}
					},
					"response": []
				},
				{
					"name": "scan_error_details",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 2000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
									"});\r",
									"\r",
									"const schema = {\r",
									"  \r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"repository-scan-error-details\": {\r",
									"      \"type\": \"array\",\r",
									"      \"items\": [\r",
									"        {\r",
									"          \"type\": \"object\",\r",
									"          \"properties\": {\r",
									"            \"enable\": {\r",
									"              \"type\": \"boolean\"\r",
									"            },\r",
									"            \"error\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"last-scanned-date\": {\r",
									"              \"type\": \"integer\"\r",
									"            },\r",
									"            \"repository-id\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"repository-name\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"repository-url\": {\r",
									"              \"type\": \"string\"\r",
									"            }\r",
									"          },\r",
									"          \"required\": [\r",
									"            \"enable\",\r",
									"            \"error\",\r",
									"            \"last-scanned-date\",\r",
									"            \"repository-id\",\r",
									"            \"repository-name\",\r",
									"            \"repository-url\"\r",
									"          ]\r",
									"        }\r",
									"      ]\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"repository-scan-error-details\"\r",
									"  ]\r",
									"}\r",
									"\r",
									"\r",
									"pm.test(\"Validate schema\", ()=>\r",
									"{\r",
									"    pm.response.to.have.jsonSchema(schema);\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/project/3b9fc3fc-5ce7-4156-8712-ff5b288858e3/scan/error-details",
							"host": [
								"{{url}}"
							],
							"path": [
								"project",
								"3b9fc3fc-5ce7-4156-8712-ff5b288858e3",
								"scan",
								"error-details"
							]
						}
					},
					"response": []
				},
				{
					"name": "github_token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 2000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
									"});\r",
									"\r",
									"const schema = {\r",
									"  \r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"github-token-id\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"github-token-value\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"last-retrieval-time\": {\r",
									"      \"type\": \"string\"\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"github-token-id\",\r",
									"    \"github-token-value\",\r",
									"    \"last-retrieval-time\"\r",
									"  ]\r",
									"}\r",
									"\r",
									"pm.test(\"Validate schema\", ()=>\r",
									"{\r",
									"    pm.response.to.have.jsonSchema(schema);\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/service/github_token",
							"host": [
								"{{url}}"
							],
							"path": [
								"service",
								"github_token"
							]
						}
					},
					"response": []
				},
				{
					"name": "update-snyk-dev-dependency",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 2000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
									"});\r",
									"\r",
									"const schema = {\r",
									"  \r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"enable\": {\r",
									"      \"type\": \"boolean\"\r",
									"    },\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"enable\"\r",
									"  ]\r",
									"}\r",
									"\r",
									"pm.test(\"Validate schema\", ()=>\r",
									"{\r",
									"    pm.response.to.have.jsonSchema(schema);\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"enable\": false\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/project/9ceced09-63e0-4eb1-9685-cab2997f839b/repository/540aadb7-29ca-4d4e-9dc7-38552daa304a/update-snyk-dev-dependency",
							"host": [
								"{{url}}"
							],
							"path": [
								"project",
								"9ceced09-63e0-4eb1-9685-cab2997f839b",
								"repository",
								"540aadb7-29ca-4d4e-9dc7-38552daa304a",
								"update-snyk-dev-dependency"
							]
						}
					},
					"response": []
				},
				{
					"name": "update-status",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 2000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
									"});\r",
									"\r",
									"const schema = {\r",
									"  \r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"enable\": {\r",
									"      \"type\": \"boolean\"\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"enable\"\r",
									"  ]\r",
									"}\r",
									"\r",
									"pm.test(\"Validate schema\", ()=>\r",
									"{\r",
									"    pm.response.to.have.jsonSchema(schema);\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"enable\": false\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/project/9ceced09-63e0-4eb1-9685-cab2997f839b/repository/540aadb7-29ca-4d4e-9dc7-38552daa304a/update-status",
							"host": [
								"{{url}}"
							],
							"path": [
								"project",
								"9ceced09-63e0-4eb1-9685-cab2997f839b",
								"repository",
								"540aadb7-29ca-4d4e-9dc7-38552daa304a",
								"update-status"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "url",
			"value": "https://api.security.dev.platform.linuxfoundation.org/v1"
		}
	]
}